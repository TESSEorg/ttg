# - CMAKE Config file for the TTG package

# Set package version
set(TTG_VERSION "@TTG_VERSION@")
set(TTG_EXT_VERSION "@TTG_EXT_VERSION@")

set(PaRSEC_CONFIG "@PaRSEC_CONFIG@")
set(MADNESS_CONFIG "@MADNESS_CONFIG@")
set(CXX_COROUTINE_COMPONENT "@CXX_COROUTINE_COMPONENT@")

set(TTG_TRACKED_BOOST_VERSION "@TTG_TRACKED_BOOST_VERSION@")
set(TTG_HAS_BOOST @TTG_HAS_BOOST@)
set(TTG_IGNORE_BUNDLED_EXTERNALS @TTG_IGNORE_BUNDLED_EXTERNALS@)

# make TTG CMake modules discoverable + load AddTTGExecutable by default
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules")
include(AddTTGExecutable)

@PACKAGE_INIT@

if (TTG_HAS_BOOST)
@Boost_CONFIG_FILE_CONTENTS@
endif(TTG_HAS_BOOST)

if (NOT TARGET MADworld AND MADNESS_CONFIG)
  get_filename_component(MADNESS_CONFIG_DIR "${MADNESS_CONFIG}" DIRECTORY)
  find_package(MADNESS 0.10.1 CONFIG QUIET REQUIRED COMPONENTS world PATHS "${MADNESS_CONFIG_DIR}" NO_DEFAULT_PATH)
endif()

if (NOT TARGET PaRSEC::parsec AND PaRSEC_CONFIG)
  get_filename_component(PaRSEC_CONFIG_DIR "${PaRSEC_CONFIG}" DIRECTORY)
  find_package(PaRSEC CONFIG QUIET REQUIRED COMPONENTS parsec PATHS "${PaRSEC_CONFIG_DIR}" NO_DEFAULT_PATH)
endif()

if (NOT TARGET umpire-cxx-allocator)
  get_filename_component(umpire-cxx-allocator_DIR "@umpire-cxx-allocator_CONFIG@" DIRECTORY)
  find_dependency(umpire-cxx-allocator 1.0.0 QUIET CONFIG REQUIRED HINTS "${umpire-cxx-allocator_DIR}")
endif()

# if C++ coroutines were used discover same version of them
if (NOT TARGET std::coroutine AND CXX_COROUTINE_COMPONENT)
  find_package(CXXStdCoroutine MODULE QUIET REQUIRED COMPONENTS "${CXX_COROUTINE_COMPONENT}")
endif()

# Include library IMPORT targets
if(NOT TARGET ttg)
  include("${CMAKE_CURRENT_LIST_DIR}/ttg-targets.cmake")
  if(NOT TARGET ttg)
    message(FATAL_ERROR "expected ttg among imported TTG targets")
  endif()
endif()

set(TTG_FOUND TRUE)
